Getting Started

    Have to type this command before things will work in Raspbian
    source ~/.rvm/scripts/rvm

Class 4 Homework - DONE!

    #The Wine model object

        requirements

            #must have a constant VARIETALS [merlot, chianti, etc...]
            def self.varietals
                ['Cabernet','Pinot Noir','Chardonnay','Champagne','Chianti','Pinot Grigio']
            end
            ended up replacing this with a CONSTANT.  CAPSLOCK FTW

             #must validate

                #name is present
                validates :name, presence: true

                #year is present and an integer
                validates :year, presence: true, numericality: { only_integer: true }

                #country is present
                validates :country, presence: true

                #varietal is valid from list (hint: inclusion in VARIETALS)
                #http://guides.rubyonrails.org/active_record_validations.html#inclusion
                #validates :varietal, presence: true, inclusion: { in: ['Cabernet','Pinot Noir','Chardonnay','Champagne','Chianti','Pinot Grigio'].join (' ')
                #^^ can I reference the list declared in the model here??
                validates :varietal, presence: true, inclusion: { in: self.varietals }

            #Also, be sure to re-check that your seed data validates properly!!
            #test by rake db:seed?  will check that out

            #You must create at least 6 wines in the seeds file, so that pagination will occur without

        status

            elaboration: yes
            code: yes
            tested: yes

    The WinesController

        requirements

            must validate wine objects before saving
            see bookstore code, controller, create and update methods

            must notify the user after successfully saving a wine object ct (hint: The Flash)
            see bookstore code, controller, create and update methods (and the flash layout and the list page (that includes the flash layout)

        status

            elaboration: yes
            code: yes
            tested: yes

    The layout

        requirements

            must have a header and footer that shows on all pages
            done

            must have a sidebar containing common functions, e.g. "All Wines" and "Create Wine"
            done

            must be able to show flash messages on all pages (hint: use a partial)
            done

            must be setup to use the Bootstrap CSS classes, e.g. col-xs-3 (Hint: refere to the layout we used in the class labs for the Bookstore app)
            done

        status

            code: yes
            tested: yes

    Styling

        requirements

            must require Twitter bootstrap
            Hint: refer back to Lab 6
            done

        status

            code: yes
            tested: yes

    The Gemfile

        requirements

            must contain 'bootstrap-sass', 'autoprefixer-rails', 'kaminari', and 'kaminari-bootstrap'
            done

        status

            code: yes
            tested: yes

    The index page

        requirements

            must paginate when there are more than 5 wines (hint: you will need to edit the Kaminari configuration)

        status

            code: yes
            tested: yes

    The new and edit pages

        requirements

            must show validation errors when attempting to save an invalid wine
            done

            must use a select form element to let the users select the varietal
            Hint: f.select :vaÃ§rietal, Wine::VARIETALS, { prompt: "Pick one" }
            done

        status

            code: yes
            tested: yes

    routes.rb

        requirements

            add a root path that points to the wines index (Hint: http://guides.rubyonrails.org/routing.html#using-root
            done

        status

            code: yes
            tested: yes

        When everything is done and tested and good to go...

            cd ~/Workspace/wine_review
            git tag class-04
            git push --tags

Class 5 - NOT DONE!

    Create a LogEntry model object

        must have fields

            name: string
            rating: integer
            location: string
            comments: string
            tasted_on: datetime

            DONE

        must validate presence of all fields

          RATING_RANGE = 1..5

          DONE

        must have a constant for valid ratings

          validates :name, presence: true
          validates :rating, presence: true, inclusion => RATING_RANGE
          validates :location, presence: true
          validates :comments, presence: true
          validates :tasted_on, presence: true

          DONE

    Create a LogEntriesController

        must list log entries
        must allow creation of new log entries

        DONE

    The "new" page

        must show validation errors when attempting to save an invalid LogEntry
        must use radio buttons to select the rating
        should use date_select to choose the tasted_on date
        must use ajax to load the new log entry form

    routes.rb
        nest the log_entry resources route under wine

    (Don't forget to git add, git commit, git push. If the homework isn't on GitHub, then we can't grade it.)

Other Tinkering

    Testing        
        101
	        http://guides.rubyonrails.org/testing.html

            borks at
                bin/rake test --trace
            resume at
                https://www.google.com/search?q=rake+aborted!+NoMethodError%3A+undefined+method+%60assert%27+for&gws_rd=ssl

        Cucumber
            https://cucumber.io/docs/reference/rails
            https://blog.codecentric.de/en/2013/08/cucumber-setup-basics/

            works!
            rake cucumber